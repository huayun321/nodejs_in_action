第六章 Connect

本章内容：
    搭建一个Connect程序
    Connect中间件的工作机制
    为什么中间件的顺序很重要
    挂载中间件和服务器
    创建可配置的中间件
    使用错误处理中间件

Connect是一个框架，它使用被称为中间件的模块化组件，
以可重用的方式实现Web程序中的逻辑。
在Connect 中，中间件组件是一个函数，
它拦截HTTP服务器提供的请求和响应对象，执行逻辑，
然后或者结束响应，或者把它传递给下一个中间件组件。
Connect 用分派器把中间件链接在一起。

在Connect 中，你可以使用自己编写的中间件，
但它也提供了几个常用的组件，
可以用来做请求日志、静态文件服务、请求体解析、会话管理。
对于想构建自己的高层Web 框架的开发人员来说，
Connect 就像一个抽象曾，因为Connect 很容易扩展，
在其上构建东西也很容易。

Express 构建在Connect 之上

6.1 搭建一个Connect程序
6.2 Connect的工作机制
    6.2.1 做日志的中间件
    6.2.2 响应“hello world”的中间件
6.3 为什么中间件的顺序很重要
    6.3.1 中间件什么时候不调用next()
    6.3.2 用中间件的顺序执行认证
6.4 挂载中间件和服务器
    6.4.1 认证中间件
    6.4.2 显示管理面板的中间件
6.5 创建可配置中间件
    6.5.1 创建可配置的logger中间件组件
    6.5.2 构建路由中间件组件
    6.5.3 构建一个重写URL的中间件组件
6.6 使用错误处理中间件
    6.6.1 Connect的默认错误处理器
    6.6.2 自行处理程序错误
    6.6.3 使用多个错误处理中间件组件

6.7 小结
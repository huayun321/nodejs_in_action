第七章 Connect自带的中间件

本章内容
    解析cookie、请求主体和查询字符串的中间件
    实现web程序核心功能的中间件
    处理web程序安全的中间件
    提供静态文件服务的中间件

7.1 解析cookie、请求主体和查询字符串的中间件
    7.1.1 cookieParser(): 解析http cookie
        1、基本用法
        2、常规cookie
        3、签名cookie
        4、JSON cookie
        5、设定出站 cookie
    7.1.2 bodyParser(): 解析请求主体
        1、基本用法
        2、解析JSON数据
        3、解析常规的<form>数据
        4、解析multipart<form>数据
    7.1.3 limit(): 请求主体的限制
        1、为什么需要limit()
        2、基本用法
        3、给limit()更大的灵活性
    7.1.4 query(): 查询字符串解析
        基本用法

7.2 实现web程序核心功能的中间件
    7.2.1 logger(): 记录请求
        1、基本用法
        2、定制日志格式
        3、日志选项： stream、immediate 和buffer
    7.2.2 favicon(): 提供favicon
        基本用法
    7.2.3 methodOverride(): 伪造http方法
        1、基本用法
        2、访问原始的req.method
    7.2.4 vhost(): 虚拟主机
        1、基本用法
        2、使用多个vhost()实例
    7.2.5 session(): 会话管理
        1、基本用法
        2、设定会话有效期
        3、处理会话数据
        4、操纵会话cookie
        5、会话存储

7.3 处理web安全的中间件
    7.3.1 basicAuth(): http基本认证
        1、基本用法
        2、提供回调函数
        3、提供异步回调函数
        4、使用curl(1)的例子
    7.3.2 csrf(): 跨站请求伪造防护
        基本用法
    7.3.3 errorHandler(): 开发错误处理
        1、基本用法
        2、接收html 错误响应
        3、接受普通文本错误响应
        4、接收json错误响应

7.4 提供静态文件服务的中间件
    7.4.1 static(): 静态文件服务
        1、基本用法
        2、使用带挂载的static()
        3、绝对与相对目录路径
        4、请求目录使返回Index.html
    7.4.2 compress(): 压缩静态文件
        1、基本用法
        2、使用定制的过滤器函数
        3、制定压缩及内存水平
    7.4.3 directory(): 目录列表
        1、基本用法
        2、使用带挂载的directory()

7.5 小结
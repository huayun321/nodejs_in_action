node的模块（package目录）
1、包可以是一个文件也可以是包含一个或多个文件的目录
如果是目录node 通常需要index.js作为入口（可以通过package.json修改）
{ "main": "./currency.js"}

2、通过设置exports的属性 可以组装函数和属性
    exports.somefunction = function() {}
    exports.someval = val

3、通过module.exports向外部提供单个变量或函数或对象

异步编程
    用回调处理一次性事件（callback目录）
        嵌套回调
            见blog_recent.js
        使用中间函数减少嵌套
            见blog_recent_with_middle_func.js
            使用return 减少回调嵌套
                见blog_recent_with_middle_func_with_returnif

    用事件发射器处理重复性事件
        1、事件发射器示例
            见echo_server.js
        2、响应只应该发生一次的事件
            见echo_server.js
        3、创建事件发射器：一个PUB/SUB的例子
            用node自带的事件模块创建自己的事件发射器
                见channel.js
                见pub-sub.js
            错误处理
                常规处理方式
                    创建发出error类型事件的事件发射器
                    见exception.js
        4、扩展事件监听器：文件监视器
            为了在事件发射器基础上构建程序
            创建一个新的js类继承事件发射器
            扩展事件发射器需要三步：
                1、创建类的构造器
                2、继承事件发射器的行为
                3、扩展这些行为
            见watcher.js
    异步开发的难题
        因执行顺序不同 而出现的各种问题
        例如因为不是线性执行，变量作用域的问题导致的bug
        scope.js
异步逻辑的顺序化
    什么时候使用串行流程控制
    实现串行化流程控制
    实现并行化流程控制
    利用社区里的工具
小结